class Solution {
    public List<Integer> mostVisited(int n, int[] rounds) {
        List<Integer> list = new ArrayList<>();
        int[] counter = new int[n+1];
        
        int start = 0;
        for(int i = 0; i < rounds.length-1; i++){
            if(rounds[i] < rounds[i+1]){
                if(i == 0){
                    start = rounds[i];
                }
                else{
                    start = rounds[i]+1;
                }
                for(int j = start; j <= rounds[i+1]; j++){
                    counter[j]++;
                }
            }
            else{
                if(i == 0){
                    start = rounds[i];
                }
                else{
                    start = rounds[i]+1;
                }
                for(int j = start; j <= n; j++){
                    counter[j]++;
                }
                for(int j = 1; j <= rounds[i+1]; j++){
                    counter[j]++;
                }
            }
        }
        
        int max = Arrays.stream(counter).max().getAsInt();
        for(int i = 1; i <= n; i++){
            if(counter[i] == max){
                list.add(i);
            }
        }
        
        Collections.sort(list);
        
        return list;
    }
}
